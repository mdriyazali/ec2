name: Create EC2 Instance

on:
  push:
    branches:
      - main

jobs:
  create-ec2-instance:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Change to your desired region

    - name: Launch EC2 Instance with Default Parameters
      run: |
        # Fetch the default VPC ID
        DEFAULT_VPC_ID=$(aws ec2 describe-vpcs --query "Vpcs[?IsDefault==true].VpcId" --output text)
        
        # Fetch the default subnet ID
        DEFAULT_SUBNET_ID=$(aws ec2 describe-subnets --filters "Name=vpc-id,Values=$DEFAULT_VPC_ID" --query "Subnets[0].SubnetId" --output text)
        
        # Fetch the default security group ID
        DEFAULT_SECURITY_GROUP_ID=$(aws ec2 describe-security-groups --filters "Name=vpc-id,Values=$DEFAULT_VPC_ID" --query "SecurityGroups[0].GroupId" --output text)
        
        # Fetch the latest Amazon Linux 2 AMI ID
        LATEST_AMI_ID=$(aws ec2 describe-images --owners amazon --filters "Name=name,Values=amzn2-ami-hvm-*-x86_64-gp2" --query "Images | sort_by(@, &CreationDate)[-1].ImageId" --output text)
        
        # Launch the EC2 instance
        INSTANCE_ID=$(aws ec2 run-instances --image-id $LATEST_AMI_ID --count 1 --instance-type t2.micro --security-group-ids $DEFAULT_SECURITY_GROUP_ID --subnet-id $DEFAULT_SUBNET_ID --query 'Instances[0].InstanceId' --output text)
        echo "EC2 Instance ID: $INSTANCE_ID"
        
    - name: Wait for EC2 Instance to be running
      run: |
        aws ec2 wait instance-running --instance-ids $INSTANCE_ID
        echo "EC2 Instance $INSTANCE_ID is running"

    - name: Describe EC2 Instance
      run: |
        aws ec2 describe-instances --instance-ids $INSTANCE_ID --query 'Reservations[0].Instances[0].{ID:InstanceId,Type:InstanceType,State:State.Name,PublicIP:PublicIpAddress,PrivateIP:PrivateIpAddress,LaunchTime:LaunchTime}' --output table
